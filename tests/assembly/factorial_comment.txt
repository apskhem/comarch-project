lw 0 7 neg1
lw 0 4 x
lw 0 6 one
lw 0 1 address
lw 0 2 one				//default answer is 1
loop beq 0 4 fact		
sw 1 4 address			//push x to stack
add 4 7 4				//x -= 1
add 1 6 1				//move pointer to null (address+=1)
beq 0 0 loop			
fact beq 0 1 done
lw 0 7 neg1		
add 1 7 1				// (address -= 1) move to tail
lw 1 4 address			//load tail to reg4
lw 0 6 multi			//load multi address
jalr 6 5				//goto multi
sw 1 7 address
lw 1 2 address
sw 1 0 address
beq 0 0 fact			//back to fact
mul lw 0 3 round		//15 round
lw 0 7 zero
beq 0 3 mulply			//loop multiply
add 7 7 7
lw 0 6 check
nand 4 6 4
nand 4 4 4
beq 0 4 1
add 7 2 7
add 4 4 4
beq 0 0 mul
mulply jalr 5 6
noop
done halt
x .fill 5
neg1 .fill -1
one .fill 1
multi .fill mul
round .fill 15
check .fill 16384
zero .fill 0
address .fill 100